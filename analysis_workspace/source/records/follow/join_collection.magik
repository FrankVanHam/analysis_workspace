#
#  This file is part of Analysis Workshop.
#
#  Analysis Workshop is free software: you can redistribute it and/or modify
#  it under the terms of the Lesser GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  Analysis Workshop is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with Analysis Workshop.  If not, see <http://www.gnu.org/licenses/>.
#

_package rwan
$


#remex(:join_collection)

_pragma(classify_level=basic, topic={analysis})
##
## Analysis collection that follows over a join to another
## collection
##
def_slotted_exemplar(:join_collection,
	{},
	:method_collection)
$

_pragma(classify_level=basic, topic={analysis})
_method join_collection.new(dsm, base_col, join_field_name)
	_local sw_col << base_col.expose()
	_local target_col << sw_col.field(join_field_name).result_table(sw_col.dataset)
	_return _clone.init(dsm, base_col, target_col, join_field_name, _unset)
_endmethod
$

_pragma(classify_level=basic, topic={analysis})
_method join_collection.activate_editor_in(dialog, holder)
	_return dialog.edit_follow_join_dialog(holder,
					       _self.base_collection, .methd)
_endmethod
$

_pragma(classify_level=basic, topic={analysis})
_method join_collection.description(translator)
	_local base_name << translator.name_for_collection(_self.base_collection)
	_return _self.message(:description, _self.target_collection.external_name, .methd, base_name)
_endmethod
$

