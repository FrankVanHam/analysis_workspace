#
#  This file is part of Analysis Workshop.
#
#  Analysis Workshop is free software: you can redistribute it and/or modify
#  it under the terms of the Lesser GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  Analysis Workshop is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with Analysis Workshop.  If not, see <http://www.gnu.org/licenses/>.
#

_package user
$


_pragma(classify_level=advanced, topic={roos,analytics})
_method min_road.rwan_methods
	_local col << _self.dataset.collection(:hotel)
	_return property_list.new_with(
			:a_hotel, {:|a_hotel()|, {}, "1 hotel", col},
			:hotel_5, {:|nr_hotels()|, {5}, "5 hotels", col},
			:hotel_10, {:|nr_hotels()|, {10}, "10 hotels", col},
			:next, {:|next_nr()|, {}, "find the next", _self.source}
		)
_endmethod
$

_pragma(classify_level=advanced, topic={roos,analytics})
_method min_road.next_nr()
	_local (name, idx) << (_scatter _self.name.write_string.split_by(%_))
	idx << _if idx _isnt _unset _then >> idx.as_number().default(0) _else >> 0 _endif
	_if idx = 0
	_then
		_return {_self}
	_else
		_return rope.new_from(
				_self.source.select(predicate.eq(
							    :name,
							    write_string(name,"_",idx+1))))
	_endif 
_endmethod
$


_pragma(classify_level=advanced, topic={roos,analytics})
_method min_road.a_hotel()
	_local col << _self.dataset.collection(:hotel)
	_return {col.an_element()}
_endmethod
$

_pragma(classify_level=advanced, topic={roos,analytics})
_method min_road.nr_hotels(nr)
	_local col << _self.dataset.collection(:hotel)
	_local str << col.read_stream()
	_return str.get_n(nr)
_endmethod
$

