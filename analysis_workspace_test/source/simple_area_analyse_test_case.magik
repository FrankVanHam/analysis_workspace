#
#  This file is part of Analysis Workshop.
#
#  Analysis Workshop is free software: you can redistribute it and/or modify
#  it under the terms of the Lesser GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  Analysis Workshop is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with Analysis Workshop.  If not, see <http://www.gnu.org/licenses/>.
#

_package rwan
$

#remex(:simple_area_analyse_test_case)

_pragma(classify_level=basic, topic={analysis})
def_slotted_exemplar(:simple_area_analyse_test_case,
	{},
	:base_analysis_test_case)
$

_pragma(classify_level=basic, topic={analysis})
_method simple_area_analyse_test_case.test_topology_query()
	_local dsm << rwan:analysis_dataset_manager.new(:test)
	_local acol << _self.haig_and_chesterton_set(dsm)
	_local hcol << acol.follow_topology( :centre_line, _self.hotel_collection)
	_self.assert_is( hcol.size, 9, "There should be 9 topological connected hotels")
	
	_local rcol1 << _self.chesterton_roundabout_roads_geometry_set(dsm)
	hcol << rcol1.follow_topology( :centre_line, _self.hotel_collection )
	_self.assert_is( hcol.size, 9, "There should be 9 topological connected hotels")
_endmethod
$

_pragma(classify_level=basic, topic={analysis})
_method simple_area_analyse_test_case.test_composite_collections()
	_local dsm << rwan:analysis_dataset_manager.new(:test)
	_local rcol << rwan:sw_collection.new(dsm, _self.min_road_collection)
	_local rcol1 << rcol.filter_by_predicate(predicate.eq(:name, "Chesterton Road"))
	_local rcol2 << rcol.filter_by_predicate(predicate.eq(:name, "Haig Road"))
	_local ap_col << rcol1.union(rcol2)
	_self.assert_is(ap_col.size, 2, "There are two roads")
_endmethod
$

_pragma(classify_level=basic, topic={analysis})
_method simple_area_analyse_test_case.test_subtract_collections()
	_local dsm << rwan:analysis_dataset_manager.new(:test)
	_local all_four << _self.chesterton_roundabout_roads_geometry_set(dsm)
	
	_local col << _self.min_road_collection
	_local rcol << rwan:sw_collection.new(dsm, col)
	_local pred << predicate.eq(:road_type, "A-Road")
	_local rcol1 << rcol.filter_by_predicate(pred)
	
	_local sub_col << all_four.subtraction(rcol1)
	_self.assert_is( sub_col.size, 1, "There is only 1 not A-Road at the roundabout")
_endmethod
$


